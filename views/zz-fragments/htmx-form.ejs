<!-- Wrapper where HTMX swaps fragments -->
<!-- This form should be inside the modal -->
<div id="payment-area">
  <div class="payment-card">
    <div class="payment-header">
      <i class="fa-solid fa-wallet payment-header-icon"></i>
      <h5>Lipa kwa Simu</h5>
    </div>
    <div class="payment-body">
      <form id="@htmx-payment" hx-post="/api/pay" hx-target="#payment-area" hx-swap="innerHTML"
        hx-disabled-elt="input, button" class="needs-validation" novalidate>

        <!-- Phone: +255 prefix + 9 digits not starting with 0 -->
        <div>
          <label for="payPhone" class="payment-label">
            <i class="fa-solid fa-phone"></i>
            Namba Yako ya Simu
          </label>
          <div class="phone-input-group">
            <span class="phone-prefix">+255</span>
            <input type="text" class="phone-input" id="payPhone" name="phone9" inputmode="numeric"
              pattern="[1-9][0-9]{8}" minlength="9" maxlength="9" placeholder="Mfano: 712345678" autocomplete="tel"
              required>
          </div>
          <div class="payment-invalid-feedback">Weka tarakimu 9 bila kuanza na 0.</div>
        </div>
        <!-- Inline feedback area for errors (updated via OOB swap) -->
        <div id="pay-form-feedback" class="d-none"></div>
        <button type="submit" class="submit-btn">
          <span class="label-text">
            Tuma Malipo
            <i class="fa-solid fa-paper-plane ms-1"></i>
          </span>
          <!-- HTMX loading indicator: spinner only -->
          <span class="htmx-indicator">
            <span class="spinner-border spinner-custom-css" role="status" aria-hidden="true"></span>
          </span>
        </button>
      </form>
    </div>
  </div>
</div>
<!-- Modal root: HTMX will inject modal HTML here -->
<div id="modal-root"></div>


<script>
  // Simple client-side Bootstrap validation (optional)
  (function () {
    const form = document.getElementById('@htmx-payment');
    if (!form) return;
    form.addEventListener('submit', function (e) {
      if (!form.checkValidity()) {
        e.preventDefault();
        e.stopPropagation();
      }
      form.classList.add('was-validated');
    }, false);
  })();
</script>